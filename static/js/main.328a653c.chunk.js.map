{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","props","intervalID","update_clock","bind","state","remaining_time","timer_seconds","timer_minutes","timer_hours","timer_days","timerOn","this","timer","document","title","clearInterval","days","Math","floor","hours","minutes","seconds","setState","setTimeout","setInterval","className","id","length","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.328a653c.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\n\r\nimport \"./App.css\";\r\n\r\nexport class App extends Component {\r\n  intervalID = 0;\r\n\r\n  constructor(props) {\r\n    \r\n    super(props);\r\n    this.update_clock = this.update_clock.bind(this);\r\n   \r\n    \r\n    \r\n\r\n    // define the functions in the constructor to initialize the this keyword\r\n\r\n    this.state = {\r\n      remaining_time:500000000,\r\n      timer_seconds: [0],\r\n      timer_minutes:[0],\r\n      timer_hours:[0],\r\n      timer_days:[0],\r\n      timerOn:false\r\n    }\r\n  }\r\n \r\n\r\n  componentDidMount() {\r\n    this.timer()\r\n    \r\n    document.title = \"React countdown timer\";\r\n  }\r\n  componentDidUpdate() {\r\n    \r\n    \r\n  }\r\n  componentWillUnmount() {\r\n    clearInterval(this.intervalID);\r\n  }\r\n \r\n\r\n  \r\n\r\n  update_clock() {\r\n    const { remaining_time } = this.state;\r\n\r\n    const days    = Math.floor(remaining_time / (1000 * 60 *60 * 24));\r\n    const hours   = Math.floor((remaining_time % (1000 * 60 * 60 * 24)) / (1000 * 60 *60));\r\n    const minutes = Math.floor((remaining_time % (1000 * 60 * 60)) / (1000 * 60));\r\n    const seconds = Math.floor((remaining_time % (1000 * 60)) /1000);\r\n\r\n    \r\n  // Update state\r\n  \r\n\r\n  if(this.state.timer_seconds[0] !== seconds) {\r\n    this.setState({timer_seconds: [...this.state.timer_seconds, seconds ]});\r\n    setTimeout(()=>{\r\n      this.setState({timer_seconds: [ seconds ]});\r\n    } ,500)\r\n  }\r\n  if(this.state.timer_minutes[0] !== minutes) {\r\n    this.setState({timer_minutes : [...this.state.timer_minutes, minutes ]});\r\n    setTimeout(()=>{\r\n      this.setState({timer_minutes: [ minutes ]});\r\n    } ,500)\r\n  }\r\n  if(this.state.timer_hours[0] !== hours) {\r\n    this.setState({timer_hours: [...this.state.timer_hours, hours ]});\r\n    setTimeout(()=>{\r\n      this.setState({timer_hours: [ hours ]});\r\n    } ,500)\r\n  }\r\n  if(this.state.timer_days[0] !== days) {\r\n    this.setState({timer_days: [...this.state.timer_days, days ]});\r\n    setTimeout(()=>{\r\n      this.setState({timer_days: [ days ]});\r\n    } ,500)\r\n  }\r\n  \r\n  \r\n  \r\n  \r\n\r\n\r\n  this.setState({remaining_time: remaining_time - 1000})\r\n  }\r\n\r\n  \r\n\r\n  timer() {\r\n    this.intervalID = setInterval(this.update_clock,1000);\r\n    this.setState({timerOn: true})\r\n  }\r\n\r\n\r\n\r\n  render() {\r\n\r\n\r\n    return (\r\n        \r\n        <section className=\"timer-container \">\r\n        \r\n          <section className=\"timer\">\r\n\r\n            <div>\r\n             \r\n              <i className=\" mt-4 fab fa-react mr-3 fa-8x timer-icon\"></i>\r\n              <h2>Countdown timer</h2>\r\n\r\n              <p>Built in React</p>\r\n              </div>\r\n\r\n            <div>\r\n                <section>\r\n                <div id=\"letterbox\"  >{this.state.timer_days.length === 1?<p>{this.state.timer_days[0]} </p> : <p className={this.state.timer_days.length > 1? \"animate\": \"reset\" }>{this.state.timer_days[0]}<br></br>{this.state.timer_days[1]}</p> }</div>\r\n\r\n                <p><small>days</small></p>\r\n                </section>\r\n                <span>:</span>\r\n                \r\n                <section>\r\n                <div id=\"letterbox\"  >{this.state.timer_hours.length === 1?<p>{this.state.timer_hours[0]} </p> : <p className={this.state.timer_hours.length > 1? \"animate\": \"reset\" }>{this.state.timer_hours[0]}<br></br>{this.state.timer_hours[1]}</p> }</div>\r\n\r\n                <p><small>Hours</small></p>\r\n                </section>\r\n                <span>:</span>\r\n               \r\n                <section>\r\n                <div id=\"letterbox\"  >{this.state.timer_minutes.length === 1?<p>{this.state.timer_minutes[0]} </p> : <p className={this.state.timer_minutes.length > 1? \"animate\": \"reset\" }>{this.state.timer_minutes[0]}<br></br>{this.state.timer_minutes[1]}</p> }</div>\r\n\r\n                <p><small>minutes</small></p>\r\n                </section>\r\n                <span>:</span>\r\n                \r\n                <section>\r\n               <div id=\"letterbox\"  >{this.state.timer_seconds.length === 1?<p>{this.state.timer_seconds[0]} </p> : <p className={this.state.timer_seconds.length > 1? \"animate\": \"reset\" }>{this.state.timer_seconds[0]}<br></br>{this.state.timer_seconds[1]}</p> }</div>\r\n                <p><small>seconds</small></p>\r\n                </section>\r\n\r\n             \r\n            \r\n             \r\n               \r\n            </div>\r\n          </section>\r\n        </section>\r\n    \r\n    \r\n    )\r\n  }\r\n  \r\n}\r\n\r\nexport default App\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}